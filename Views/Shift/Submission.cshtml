@using sumile.Models

@{
    ViewData["Title"] = "シフト提出";
    var shiftDays = ViewBag.Dates as List<ShiftDay> ?? new List<ShiftDay>();
    var existingSubs = ViewBag.ExistingSubmissions as List<ShiftSubmission> ?? new List<ShiftSubmission>();
    int? selectedPeriodId = ViewBag.SelectedPeriodId as int?;
}

<h2>@ViewData["Title"]</h2>

<form asp-action="SubmitShifts" method="post" id="shiftForm">
    <input type="hidden" name="periodId" value="@selectedPeriodId" />
    <input type="hidden" name="selectedShifts" id="selectedShifts" />

    <table class="table table-bordered text-center">
        <thead>
            <tr>
                <th>日付</th>
                <th>朝 (Morning)</th>
                <th>夜 (Night)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var day in shiftDays)
            {
                var morning = existingSubs.FirstOrDefault(s => s.ShiftDayId == day.Id && s.ShiftType == ShiftType.Morning);
                var night = existingSubs.FirstOrDefault(s => s.ShiftDayId == day.Id && s.ShiftType == ShiftType.Night);

                var morningSymbol = ConvertStateToSymbol(morning?.ShiftStatus);
                var nightSymbol = ConvertStateToSymbol(night?.ShiftStatus);

                bool morningSelected = (morningSymbol == "〇" || morningSymbol == "△");
                bool nightSelected = (nightSymbol == "〇" || nightSymbol == "△");

                <tr>
                    <td>@day.Date.ToLocalTime().ToString("yyyy-MM-dd")</td>
                    <td class="shift-cell @(morningSelected ? "selected" : "")"
                        data-date="@day.Date.ToString("yyyy-MM-dd")"
                        data-shift="Morning">
                        @morningSymbol
                    </td>
                    <td class="shift-cell @(nightSelected ? "selected" : "")"
                        data-date="@day.Date.ToString("yyyy-MM-dd")"
                        data-shift="Night">
                        @nightSymbol
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button type="submit" class="btn btn-primary">提出</button>
    <a asp-action="Index" class="btn btn-secondary">戻る</a>
</form>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const shiftCells = document.querySelectorAll(".shift-cell");
            const selectedShiftsInput = document.getElementById("selectedShifts");

            shiftCells.forEach(cell => {
                cell.addEventListener("click", function () {
                    let currentSymbol = this.textContent.trim();
                    let nextSymbol = currentSymbol === "×" ? "〇" : currentSymbol === "〇" ? "△" : "×";
                    this.textContent = nextSymbol;
                    this.classList.toggle("selected", nextSymbol !== "×");
                    updateSelectedShifts();
                });
            });

            function updateSelectedShifts() {
                let selectedShifts = [];
                document.querySelectorAll(".shift-cell.selected").forEach(cell => {
                    selectedShifts.push({
                        date: cell.dataset.date,
                        shiftType: cell.dataset.shift,
                        shiftSymbol: cell.textContent.trim()
                    });
                });
                selectedShiftsInput.value = JSON.stringify(selectedShifts);
            }
        });
    </script>
}

@functions {
    string ConvertStateToSymbol(ShiftState? state)
    {
        return state switch
        {
            ShiftState.Accepted => "〇",
            ShiftState.WantToGiveAway => "△",
            ShiftState.NotAccepted => "",
            _ => "×"
        };
    }
}
