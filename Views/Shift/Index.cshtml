@model sumile.Models.ShiftIndexViewModel
@{
    ViewData["Title"] = "シフト一覧";
}

<h2>@ViewData["Title"]</h2>

<!-- ★ ログイン中のユーザー情報を表示 -->
@if (!string.IsNullOrEmpty(Model.CurrentUserCustomId))
{
    <p>ログイン中: ID=@Model.CurrentUserCustomId / 名前=@Model.CurrentUserName</p>
}

<!-- シフト提出 + ログアウトボタン -->
<div class="mb-3">
    <!-- シフト提出画面に遷移するボタン -->
    <a asp-action="Submission" controller="Shift" class="btn btn-primary">
        シフトを提出する
    </a>

    <!-- ログアウトボタン (POST用フォーム) -->
    <form asp-controller="Account" asp-action="Logout" method="post" style="display:inline;">
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-danger">ログアウト</button>
    </form>

    <!-- 新たな画面遷移ボタン：ログインユーザーの最新募集期間内のシフト一覧 -->
    <a asp-action="SubmittedList" controller="Shift" class="btn btn-info">
        提出シフト一覧
    </a>
</div>

<form method="get" asp-action="Index">
    <select name="periodId" onchange="this.form.submit()">
        @foreach (var rec in Model.RecruitmentPeriods)
        {
            <option value="@rec.Id" selected="@(rec.Id == Model.SelectedPeriodId ? "selected" : null)">
                @rec.StartDate.ToString("yyyy-MM-dd") - @rec.EndDate.ToString("yyyy-MM-dd")
            </option>
        }
    </select>
</form>


<table class="table table-bordered text-center">
    <thead>
        <tr>
            <th rowspan="2">ユーザー</th> <!-- 左端のユーザー列を2行分占有 -->
            @foreach (var date in Model.Dates)
            {
                <th colspan="2">@date.ToString("M/d")</th> <!-- 各日付で2列（朝・夜）を占有 -->
            }
        </tr>
        <tr>
            @foreach (var date in Model.Dates)
            {
                <th>上</th>
                <th>敷</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model.Users)
        {
            <tr>
                <!-- 左端のユーザーID -->
                <td>@user.CustomId</td>

                @foreach (var date in Model.Dates)
                {
                    var morningShift = Model.Submissions.FirstOrDefault(s =>
                        s.UserId == user.Id &&
                        s.Date.ToString("yyyy-MM-dd") == date.ToString("yyyy-MM-dd") &&
                        s.ShiftType == "Morning"
                    );
                    var nightShift = Model.Submissions.FirstOrDefault(s =>
                        s.UserId == user.Id &&
                        s.Date.ToString("yyyy-MM-dd") == date.ToString("yyyy-MM-dd") &&
                        s.ShiftType == "Night"
                    );

                    <td>@(morningShift != null ? "〇" : "×")</td>
                    <td>@(nightShift != null ? "〇" : "×")</td>
                }
            </tr>
        }
    </tbody>
</table>
