@{
    ViewData["Title"] = "シフト一覧(管理者用)";
    var users = ViewBag.Users as IEnumerable<dynamic> ?? new List<dynamic>();  // { Id, CustomId, Name }
    var dates = ViewBag.Dates as List<DateTime> ?? new List<DateTime>();
    var submissions = ViewBag.Submissions as IEnumerable<dynamic> ?? new List<dynamic>();
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

<h2>@ViewData["Title"]</h2>

<a asp-action="SetRecruitmentPeriod" class="btn btn-primary">募集期間設定</a>
<!-- 追加: シフト変更ボタン -->

<a href="@Url.Action("EditShifts", "Admin")" class="btn btn-secondary">
    シフト
</a>
<table class="table table-bordered text-center">
    <thead>
        <tr>
            <th rowspan="2">ユーザー</th> <!-- 左端のユーザー列を2行分占有 -->
            @foreach (var date in dates)
            {
                <th colspan="2">@date.ToString("M/d")</th> <!-- 各日付で2列（朝・夜）を占有 -->
            }
        </tr>
        <tr>
            @foreach (var date in dates)
            {
                <th>上 </th>
                <th>敷 </th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var user in users)
        {
            <tr>
                <!-- 左端のユーザーID -->
                <td>@user.CustomId</td>

                @foreach (var date in dates)
                {
                    var morningShift = submissions.FirstOrDefault(s => s.UserId == user.Id && ((DateTime)s.Date).ToString("yyyy-MM-dd") == date.ToString("yyyy-MM-dd") && s.ShiftType == "Morning");
                    var nightShift = submissions.FirstOrDefault(s => s.UserId == user.Id && ((DateTime)s.Date).ToString("yyyy-MM-dd") == date.ToString("yyyy-MM-dd") && s.ShiftType == "Night");

                    <td>@(morningShift != null ? "〇" : "×")</td>
                    <td>@(nightShift != null ? "〇" : "×")</td>
                }
            </tr>
        }
    </tbody>
</table>
