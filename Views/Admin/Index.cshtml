@using System.Globalization

@{
    ViewData["Title"] = "シフト一覧(管理者用)";

    var recruitmentPeriods = ViewBag.RecruitmentPeriods as List<sumile.Models.RecruitmentPeriod>;
    int? selectedPeriodId = ViewBag.SelectedPeriodId as int?;
    var users = ViewBag.Users as IEnumerable<dynamic> ?? new List<dynamic>();
    var dates = ViewBag.Dates as List<DateTime> ?? new List<DateTime>();
    var submissions = ViewBag.Submissions as IEnumerable<sumile.Models.ShiftSubmission> ?? new List<sumile.Models.ShiftSubmission>();
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

<h2>@ViewData["Title"]</h2>

<div style="margin-bottom: 1rem;">
    <a href="@Url.Action("SetRecruitmentPeriod", "Admin")" class="btn btn-primary">募集期間設定</a>
    <a href="@Url.Action("EditShifts", "Admin")" class="btn btn-secondary">シフト編集</a>
    <a asp-action="ShiftLogs" asp-controller="Admin" class="btn btn-info">編集履歴を見る</a>
    <a asp-action="ManageSubmissionPeriods" asp-controller="Admin" class="btn btn-outline-info">募集期間一覧</a>

</div>

<div style="margin-bottom: 1rem;">
    <label for="periodSelect">表示期間：</label>
    <select id="periodSelect" class="form-select" style="width:auto; display:inline;">
        @if (recruitmentPeriods != null)
        {
            foreach (var rp in recruitmentPeriods)
            {
                <option value="@rp.Id" selected="@(rp.Id == selectedPeriodId)">
                    @rp.StartDate.ToString("yyyy/MM/dd") ～ @rp.EndDate.ToString("yyyy/MM/dd")
                </option>
            }
        }
    </select>

    @* 募集状態を切り替えるボタン（選択中の period に対して） *@
    @if (recruitmentPeriods != null && selectedPeriodId != null)
    {
        var selectedPeriod = recruitmentPeriods.FirstOrDefault(p => p.Id == selectedPeriodId);
        if (selectedPeriod != null)
        {
            <form asp-action="ToggleSubmissionStatus" asp-controller="Admin" method="post" style="display:inline;">
                <input type="hidden" name="id" value="@selectedPeriod.Id" />
                <button type="submit" class="btn btn-outline-warning ms-2">
                    @(selectedPeriod.IsOpen ? "締切にする" : "募集中に戻す")
                </button>
            </form>
        }
    }
</div>

<script>
    document.getElementById('periodSelect')?.addEventListener('change', function () {
        var pid = this.value;
        window.location.href = '@Url.Action("Index", "Admin")?periodId=' + pid;
    });
</script>

<table class="table table-bordered text-center">
    <thead>
        <tr>
            <th rowspan="3">ユーザー</th>
            @foreach (var date in dates)
            {
                <th colspan="2">@date.ToString("M/d")</th>
            }
        </tr>
        <tr>
    @foreach (var date in dates)
    {
        <th colspan="2">@date.ToString("ddd", new CultureInfo("ja-JP"))</th>
    }
</tr>

        <tr>
            @foreach (var date in dates)
            {
                <th>上</th>
                <th>敷</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var user in users)
        {
            <tr>
                <td>@user.CustomId (@user.Name)</td>
                @foreach (var date in dates)
                {
                    var morning = submissions.FirstOrDefault(s => s.UserId == user.Id && s.Date.Date == date.Date && s.ShiftType == "Morning");
                    var night = submissions.FirstOrDefault(s => s.UserId == user.Id && s.Date.Date == date.Date && s.ShiftType == "Night");

                    string morningSymbol = ConvertStateToSymbol(morning?.ShiftStatus);
                    string nightSymbol = ConvertStateToSymbol(night?.ShiftStatus);

                    <td>@morningSymbol</td>
                    <td>@nightSymbol</td>
                }
            </tr>
        }
    </tbody>
</table>

@functions {
    string ConvertStateToSymbol(sumile.Models.ShiftState? state)
    {
        return state switch
        {
            sumile.Models.ShiftState.Accepted => "〇",
            sumile.Models.ShiftState.WantToGiveAway => "△",
            sumile.Models.ShiftState.NotAccepted => "",
            _ => "×"
        };
    }
}
